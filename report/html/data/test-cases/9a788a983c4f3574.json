{
  "uid" : "9a788a983c4f3574",
  "name" : "用户注册",
  "fullName" : "WebUiTestCases.test_register.TestZc#testcase1",
  "historyId" : "db25b39f7786ace479f75148f989cc03",
  "time" : {
    "start" : 1622886535896,
    "stop" : 1622886561600,
    "duration" : 25704
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <WebUiTestCases.test_register.TestZc object at 0x09223A50>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1962599f4a66c3faf2393074c67eaf0c\")>\nbase_url = 'http://123.56.183.84/', user = 'mik_74', password = '123456'\n\n    @allure.title('用户注册')\n    @pytest.mark.parametrize('user,password', userinfo)\n    def testcase1(self, browser, base_url, user, password):\n        with allure.step('打开主页，点击注册'):\n            主页_page = XO商城主页.HomePage(browser)\n            主页_page.my_get_url(base_url)\n            主页_page.my_click(主页_page.注册)\n        with allure.step('输入用户名，点击注册'):\n            注册_page = XO商城注册.ZC(browser)\n            注册_page.my_import_text(注册_page.用户名, user)\n            注册_page.my_import_text(注册_page.设置登录密码, password)\n            # 注册_page.my_click(注册_page.注册按钮)\n            注册_page.my_submit(注册_page.设置登录密码)\n        # with allure.step('断言'):\n        #     msg1 = 注册_page.my_switch_alert()\n            # print(msg1)\n            # logger.info(msg1)\n    \n        with allure.step('注册断言'):\n            登录成功_page = XO商城登录成功页面.DLCG(browser)\n    \n    \n            try:\n                text = 登录成功_page.my_get_text(登录成功_page.欢迎)\n    \n            # text='12121'\n            # assert '欢迎来到' in text\n                if '欢迎来到' in text:\n                    logger.info('注册成功')\n                    登录成功_page.my_click(登录成功_page.退出登录)\n    \n                else:\n                    raise AssertionError('注册失败')\n            except Exception as e:\n>               raise e\n\nWebUiTestCases\\test_register.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nWebUiTestCases\\test_register.py:53: in testcase1\n    text = 登录成功_page.my_get_text(登录成功_page.欢迎)\nlibs\\common\\browser_init.py:213: in my_get_text\n    ele = self.wait_element_visible(loc)\nlibs\\common\\browser_init.py:95: in wait_element_visible\n    raise e\nlibs\\common\\browser_init.py:89: in wait_element_visible\n    ele = WebDriverWait(self.driver, t).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1962599f4a66c3faf2393074c67eaf0c\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x091F0410>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "base_url",
    "time" : {
      "start" : 1622886530201,
      "stop" : 1622886530201,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1622886530154,
      "stop" : 1622886530201,
      "duration" : 47
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "xunit_setup_class_fixture_TestZc",
    "time" : {
      "start" : 1622886535896,
      "stop" : 1622886535896,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser",
    "time" : {
      "start" : 1622886530201,
      "stop" : 1622886535896,
      "duration" : 5695
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <WebUiTestCases.test_register.TestZc object at 0x09223A50>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1962599f4a66c3faf2393074c67eaf0c\")>\nbase_url = 'http://123.56.183.84/', user = 'mik_74', password = '123456'\n\n    @allure.title('用户注册')\n    @pytest.mark.parametrize('user,password', userinfo)\n    def testcase1(self, browser, base_url, user, password):\n        with allure.step('打开主页，点击注册'):\n            主页_page = XO商城主页.HomePage(browser)\n            主页_page.my_get_url(base_url)\n            主页_page.my_click(主页_page.注册)\n        with allure.step('输入用户名，点击注册'):\n            注册_page = XO商城注册.ZC(browser)\n            注册_page.my_import_text(注册_page.用户名, user)\n            注册_page.my_import_text(注册_page.设置登录密码, password)\n            # 注册_page.my_click(注册_page.注册按钮)\n            注册_page.my_submit(注册_page.设置登录密码)\n        # with allure.step('断言'):\n        #     msg1 = 注册_page.my_switch_alert()\n            # print(msg1)\n            # logger.info(msg1)\n    \n        with allure.step('注册断言'):\n            登录成功_page = XO商城登录成功页面.DLCG(browser)\n    \n    \n            try:\n                text = 登录成功_page.my_get_text(登录成功_page.欢迎)\n    \n            # text='12121'\n            # assert '欢迎来到' in text\n                if '欢迎来到' in text:\n                    logger.info('注册成功')\n                    登录成功_page.my_click(登录成功_page.退出登录)\n    \n                else:\n                    raise AssertionError('注册失败')\n            except Exception as e:\n>               raise e\n\nWebUiTestCases\\test_register.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nWebUiTestCases\\test_register.py:53: in testcase1\n    text = 登录成功_page.my_get_text(登录成功_page.欢迎)\nlibs\\common\\browser_init.py:213: in my_get_text\n    ele = self.wait_element_visible(loc)\nlibs\\common\\browser_init.py:95: in wait_element_visible\n    raise e\nlibs\\common\\browser_init.py:89: in wait_element_visible\n    ele = WebDriverWait(self.driver, t).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1962599f4a66c3faf2393074c67eaf0c\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x091F0410>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "打开主页，点击注册",
      "time" : {
        "start" : 1622886535896,
        "stop" : 1622886549115,
        "duration" : 13219
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "输入用户名，点击注册",
      "time" : {
        "start" : 1622886549115,
        "stop" : 1622886549298,
        "duration" : 183
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "注册断言",
      "time" : {
        "start" : 1622886549298,
        "stop" : 1622886561600,
        "duration" : 12302
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"E:\\My_code\\AutoTest\\WebUiTestCases\\test_register.py\", line 64, in testcase1\n    raise e\n  File \"E:\\My_code\\AutoTest\\WebUiTestCases\\test_register.py\", line 53, in testcase1\n    text = 登录成功_page.my_get_text(登录成功_page.欢迎)\n  File \"E:\\My_code\\AutoTest\\libs\\common\\browser_init.py\", line 213, in my_get_text\n    ele = self.wait_element_visible(loc)\n  File \"E:\\My_code\\AutoTest\\libs\\common\\browser_init.py\", line 95, in wait_element_visible\n    raise e\n  File \"E:\\My_code\\AutoTest\\libs\\common\\browser_init.py\", line 89, in wait_element_visible\n    ele = WebDriverWait(self.driver, t).until(EC.visibility_of_element_located(loc))\n  File \"C:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "accd62f89c4f664c",
        "name" : "2021-06-05-17-49-20",
        "source" : "accd62f89c4f664c.png",
        "type" : "image/png",
        "size" : 196610
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "af0aba835e0aa228",
      "name" : "log",
      "source" : "af0aba835e0aa228.txt",
      "type" : "text/plain",
      "size" : 6724
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_TestZc::0",
    "time" : {
      "start" : 1622886561615,
      "stop" : 1622886561615,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "browser::0",
    "time" : {
      "start" : 1622886561615,
      "stop" : 1622886564819,
      "duration" : 3204
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "用户注册模块"
  }, {
    "name" : "epic",
    "value" : "WebUI测试"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "parentSuite",
    "value" : "WebUiTestCases"
  }, {
    "name" : "suite",
    "value" : "test_register"
  }, {
    "name" : "subSuite",
    "value" : "TestZc"
  }, {
    "name" : "host",
    "value" : "DESKTOP-2TMV0U4"
  }, {
    "name" : "thread",
    "value" : "6224-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "WebUiTestCases.test_register"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "password",
    "value" : "'123456'"
  }, {
    "name" : "user",
    "value" : "'mik_74'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "d78a17cb2481a506",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1622886500065,
        "stop" : 1622886525951,
        "duration" : 25886
      }
    }, {
      "uid" : "d9595729ad596bb2",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
      "time" : {
        "start" : 1622886474756,
        "stop" : 1622886489935,
        "duration" : 15179
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9a788a983c4f3574.json",
  "parameterValues" : [ "'123456'", "'mik_74'" ]
}